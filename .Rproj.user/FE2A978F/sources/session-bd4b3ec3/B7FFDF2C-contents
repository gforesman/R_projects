---
title: "Foresman_thesis_draft7_Analysis"
author: "Grace"
date: "2025-04-11"
output:
  word_document: default
  html_document: default
---

```{r setup, include=FALSE, warning=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r packages}
packages <- c("tidyverse", "haven", "readxl", "car", "knitr", "corrplot", "Hmisc", "lm.beta", "interactions", "gtsummary", "modelsummary", "gt", "emmeans")
installed_packages <- packages %in% rownames(installed.packages())
if(any(installed_packages == FALSE)) {
  install.packages(packages[!installed_packages])
}
invisible(lapply(packages, library, character.only = TRUE))
```

"# - individual lines of code notes"
"## = subheadings"
"### = headings/major goals of code" 

```{r loading data}

# mac: dataFull <- read_csv("~/OneDrive - brynmawr.edu/LEO Project/Prolific Study 2024/Qualtrics Data/LEO_Prolific_data_NEW.csv") 

# pc: dataFull <- read_csv("C:/Users/gmfor/OneDrive - brynmawr.edu/LEO Project/Prolific Study 2024/Qualtrics Data/LEO_Prolific_data_NEW.csv")

#reading in measures 
measures <- read_csv("C:/Users/gmfor/OneDrive - brynmawr.edu/LEO Project/Prolific Study 2024/Qualtrics Data/Grace thesis code/measures.csv")

```

## Demographics - covariates
```{r covariates - dummy coding variables}
#recoding dummy variables -> 3 for gender
DEMO_3 <- function(x){
  as.numeric(case_when(
    x == "Man" ~ 0,
    x == "Woman" ~ 1,
    x == "Non-binary person" ~ 2, 
    x == "Woman,Man" ~ 2,
    x == "Gender not listed. My gender is:" ~ 2,
    x == "Non-binary person,Agender/I don't identify with any gender" ~ 2,
    x == "Agender/I don't identify with any gender" ~ 2,
    x == "Man,Non-binary person" ~ 2, 
    x == "Prefer not to say" ~ 2, 
    is.na(x) ~ 2
  ))
}


#dummy variables 
measures <- measures %>%
  mutate_at(vars(gender), DEMO_3)

#seeing how many people were in category NB (2)
sum(measures$gender == 2)

#sum(dataOutlier$outlier_flag == "outlier", na.rm = TRUE)
```

  mutate(
    ethnicity = paste(DEMO$ethnicity, DEMO$ethnicity_not_listed_qual, sep = " "), 
    ethnicity = case_when(
      ethnicity == "White,Hispanic or Latinx " ~ "White - Hispanic or Latinx",
      ethnicity == "Other: Asian/African/American" ~ "mixed or multiple ethnic identities",
      ethnicity == "Other: Caucasian/Hispanic" ~ "mixed or multiple ethnic identities",
      ethnicity == "Other: Indigenous American" ~ "American Indian or Alaska Native ",
      ethnicity == "Other: mixed" ~ "mixed or multiple ethnic identities",
      grepl(",", ethnicity) ~ "mixed or multiple ethnic identities",
      .default = as.character(ethnicity))
    ) %>%


## table - measures
```{r scoring : demo - table}
DEMO <- measures 

DEMO$ethnicity_not_listed_qual[is.na(DEMO$ethnicity_not_listed_qual)] <- ""


demoTable <- DEMO %>%
  mutate(
  gender = case_when(
      gender == 0 ~ "Man",
      gender == 1 ~ "Woman",
      gender == 2 ~ "Non-binary/Other", 
      gender == 2 ~ "Non-binary/Other",
      gender == 2 ~ "Non-binary/Other",
      gender == 2 ~ "Non-binary/Other",
      gender == 2 ~ "Non-binary/Other",
      gender == 2 ~ "Non-binary/Other", 
      gender == 2 ~ "Non-binary/Other")) %>%
  select(adverseExp, posExp, sleep, stress, age, gender)


#finding range function
DEMO_range <- function(data, variable, ...){
    rng <- range(data[[variable]])
    paste0(rng[1], "-", rng[2])
}


#creating demographics table 
tb1 <- tbl_summary(demoTable, 
  label = list(
    age ~ "Age",
    gender ~ "Gender Identity (%)",
    sleep ~ "Brief-Pittsburgh Sleep Quality Index",
    stress ~ "Perceived Stress Scale",
    adverseExp ~ "Adverse childhood experiences",
    posExp ~ "Positive childhood experiences"),
  statistic = list(
    all_continuous() ~ "{mean} ({sd})",
    all_categorical() ~ "{n} ({p}%)"))%>%
  add_stat(
    fns = all_continuous() ~ DEMO_range) %>% 
  modify_header(label ~ "**Participants** n = 393", stat_0 = "Mean (SD)", add_stat_1 = "Range") %>%
  as_gt() %>%
  tab_header(title = md("**Table 1.** Sample Charactersistics")) %>%
  tab_options(table.font.names = "Times New Roman") %>%
  rm_footnotes(footnotes = 1)
tb1
#saving table
#gtsave(tb1, filename = "tb1.png")

```


```{r scoring : demographics - extra}

#how many participants reported at least 1 ACE
sum(measures$adverseExp >= 1)/393 * 100
sum(measures$adverseExp >= 4)/393 * 100
sum(measures$adverseExp >= 10)/393 * 100

#how many participants reported at least 1 sleep issue 
sum(measures$sleep >= 1)/393 * 100

```

#Analysis : hlm
## correlation plot
```{r correlation plot - visuals saving plot}
#correlation plots 

#new df without gender 
corrData <- measures %>%
  rename(
     "B-PSQI" = "sleep",
     "PSS" = "stress",
     "ACEs" = "adverseExp",
     "PCEs" = "posExp"
  ) %>%
  select("B-PSQI":"age")

m_corr = cor(corrData)
m_rcorr = rcorr(as.matrix(corrData))
m_rcorr


#saving info
#png(height=2400, width=3600, res = 300, file="fig1.png", type = "cairo")


#adding p-value info 
corrp<-cor.mtest(corrData, conf.level=0.95)
par(family = "serif")

m_corr %>%
corrplot(method = "circle",
         order = "AOE",
         type = "upper",        
         p.mat = corrp$p, 
         insig = "label_sig",    
         tl.pos = "tp",
         tl.col = "black",
         tl.cex = 1.5,
         tl.offset = 1,
         tl.srt = 45,
         sig.level = c(.001, .01, .05),
         pch.cex = 2,
         cl.cex = 1,
         diag = TRUE,
         mar=c(0,0,3,0)
)

corrplot(m_corr, 
         add = TRUE, 
         type = 'lower', 
         method = 'number', 
         order = 'AOE',
         col = 'black', 
         diag = FALSE, 
         tl.pos = 'n', 
         cl.pos = 'n', 
         insig = "blank")
title(main = "Figure 1. Correlation Matrix of Measured Variables",
      adj = 0)

#dev.off()



```


```{r analysis prep}
#checking to see if factor, then converting to factor variable if not
is.factor(measures$gender)

measures$gender <- as.factor(measures$gender)

is.factor(measures$gender)

dummy_gen <- model.matrix(~gender - 1, data = measures)

```

##hypothesis 1
```{r analysis : hypothesis 1}
#Hypothesis 1, model 1
print("Hypothesis 1: PCEs and ACEs on perceived stress (compensatory model)")
h1m1 <- measures %>%
  lm(stress ~ posExp + adverseExp + age + gender,.)

summary(h1m1)

h1m1_beta <- lm.beta(h1m1)
summary(h1m1_beta)

#hypothesis 1, model 2
print("Hypothesis 1: PCEs and ACEs on perceived stress (protective model)")
h1m2 <- measures %>%
  lm(stress ~ posExp*adverseExp + age + gender,.)

summary(h1m2)

h1m2_beta <- lm.beta(h1m2)
summary(h1m2_beta)

#was getting an error
#used this: https://stackoverflow.com/questions/49778783/error-in-as-data-frame-defaultdata-cannot-coerce-class-formula-to-a-data

##ANOVA comparing model fit 
#model comp between model 1 (compensatory) and model 2 (protective)
h1_modelFit <- anova(h1m1, h1m2)
h1_modelFit

```


```{r analysis : hypothesis 1 - visuals gt}
#pulling R2 stats
h1m1_stats <- glance(h1m1)
h1m1_r2 <- round(h1m1_stats$r.squared, 3)
h1m1_r2adj <- round(h1m1_stats$adj.r.squared, 3)

h1m1_subtitle <- paste0("R² = ", h1m1_r2, ", Adjusted R² = ", h1m1_r2adj)

#hypothesis 1 model 1
h1m1_beta %>%
  tidy() %>%
  gt() %>%  
  text_case_match(
    "posExp" ~ "PCEs",
    "adverseExp" ~ "ACEs",
    "posExp:adverseExp" ~ "PCEs*ACEs",
    "gender1" ~ "women", 
    "gender2" ~ "non-binary") %>%
  cols_label(
    estimate = md("***b***"),
    std_estimate = md("**β**"),
    std.error = md("***SE***"),
    statistic = md("***t***"),
    p.value = md("***p***")
  )%>%
  cols_align(align = "left", columns = term) %>%
  cols_align(align = "center", columns = is.numeric) %>%
  tab_footnote(h1m1_subtitle) %>%
  tab_header(title = md("**Table 2.** Unique Effects Model: PCEs and ACEs on PSS in adulthood")) %>%
  tab_options(table.font.names = "Times New Roman") %>%
  fmt_number(columns = contains ("p"), decimals = 3) %>%
  fmt_number(columns = contains(c("b", "t", "SE", "B")), decimals = 2) %>%
  tab_style(
    style = list(
      cell_text(weight = "bold")
    ),
    locations = cells_body(
      columns = p.value,
      rows = p.value <.05
    )
  ) %>%
  sub_values(
    columns = contains("p"),
    fn = function(x) x < .001, 
    replacement = "< .001") #%>% gtsave(filename = "tb2.png")

#Model fit stats
h1m2_stats <- glance(h1m2)
h1m2_r2 <- round(h1m2_stats$r.squared, 3)
h1m2_r2adj <- round(h1m2_stats$adj.r.squared, 3)

h1m2_subtitle <- paste0("R² = ", h1m2_r2, ", Adjusted R² = ", h1m2_r2adj)

#hypothesis 1 model 2
h1m2_beta %>%
  tidy() %>%
  gt() %>%  
  text_case_match(
    "posExp" ~ "PCEs",
    "adverseExp" ~ "ACEs",
    "posExp:adverseExp" ~ "PCEs*ACEs",
    "gender1" ~ "women", 
    "gender2" ~ "non-binary") %>%
  cols_label(
    estimate = md("***b***"),
    std_estimate = md("**β**"),
    std.error = md("***SE***"),
    statistic = md("***t***"),
    p.value = md("***p***")
  ) %>%
  cols_align(align = "left", columns = term) %>%
  cols_align(align = "center", columns = is.numeric) %>%
  tab_footnote(h1m2_subtitle) %>%
  tab_header(title = md("**Table 3.** Interaction Model: PCEs and ACEs on PSS in adulthood")) %>%
  tab_options(table.font.names = "Times New Roman") %>%
  fmt_number(columns = contains ("p"), decimals = 3) %>%
  fmt_number(columns = contains(c("b", "t", "SE", "B")), decimals = 2) %>%
  tab_style(
    style = list(
      cell_text(weight = "bold")
    ),
    locations = cells_body(
      columns = p.value,
      rows = p.value <.05
    )
  ) %>%
  sub_values(
    columns = contains("p"),
    fn = function(x) x < .001, 
    replacement = "< .001") #%>% gtsave(filename = "tb3.png") 
  

#https://stackoverflow.com/questions/65642125/trying-to-make-a-table-in-r-where-i-group-columns-by-variables-of-a-vector 


```



```{r analysis : hypothesis 1 - assumption checks}
#assumption checks for original models
#compensatory model 
plot(h1m1)

#interaction model
plot(h1m2)
```


```{r analysis : hypothesis 1 - post-hoc simple slops - Figure 2 and 3}

##Creating an simple slopes visual plot 
#interactions
h1m2_interact <- interact_plot(model = h1m2, pred = adverseExp, modx = posExp, 
                               legend.main =  "PCEs")+
  labs(title = "Figure 2. Post-hoc Analysis: PCEs predicts relationship between ACEs and PSS 
  at different levels of PCEs")+
  xlab("ACEs")+ylab("PSS")+
  theme(text = element_text(size = 12, family = "serif"), 
        plot.title = element_text(size=12, family ="serif", hjust = 0),
        plot.caption = element_text(size=11, family ="serif", hjust = 0),
        axis.title.x = element_text(size=12, family ="serif"),
        axis.title.y = element_text(size=12, family ="serif"),
        legend.title = element_text(size=12, family ="serif")
        )
print(h1m2_interact)

h1m2_interactOpp <- interact_plot(model = h1m2, pred = posExp, modx = adverseExp, 
                                  legend.main = "ACEs")+
  labs(title = "Figure 3. Post-hoc analysis: PCEs predicts relationship between ACEs and PSS 
  at different levels of ACEs")+
  xlab("PCEs")+ylab("PSS")+
  theme(text = element_text(size = 12, family = "serif"), 
        plot.title = element_text(size=12, family ="serif", hjust = 0),
        plot.caption = element_text(size=11, family ="serif", hjust = 0),
        axis.title.x = element_text(size=12, family ="serif"),
        axis.title.y = element_text(size=12, family ="serif"),
        legend.title = element_text(size=12, family ="serif")
        )
print(h1m2_interactOpp)

#saving fig
#ggsave(h1m2_interact, filename = "fig2.png")
#ggsave(h1m2_interactOpp, filename = "fig3.png")

##The slopes for the three lines created in the plot
#getting numbers 
posVals <- c(mean(measures$stress) - sd(measures$stress), mean(measures$stress), mean(measures$stress) + sd(measures$stress))

library(ggeffects)
ggpredict(h1m2, terms = c("adverseExp", "posExp"))

sim_slopes(model = h1m2, pred = adverseExp, modx = posExp)

sim_slopes(model = h1m2, pred = posExp, modx = adverseExp)

```

```{r analysis : hypothesis 1 and 2 - collinearity}
h1m1_vif <- car::vif(h1m1)
print(h1m1_vif)

h1m2_vif <- car::vif(h1m2, type = "predictor")
print(h1m2_vif)
```


### hypothesis 1 - sensitivy check 

```{r analysis : hypothesis 1 - sensitivity check}
#hypothesis 1 sensitivity check 

#creating new df with sensitivty taken out - specified by cooks 
measures_h1m1Sens <- measures
measures_h1m1Sens <- measures_h1m1Sens[-c(385, 120, 158),]

#taking out participants - specified by cooks distance
measures_h1m2Sens <- measures
measures_h1m2Sens <- measures_h1m2Sens[-c(385, 108, 249),]

#re-running model takingout sensitivity check 

#Hypothesis 1
print("Hypothesis 1: PCEs and ACEs on perceived stress (compensatory model) - sensitivity")
h1m1Sens_check <- measures_h1m1Sens %>%
  lm(stress ~ posExp + adverseExp + age + gender,.)

summary(h1m1Sens_check)

#hypothesis 1
print("Hypothesis 1: PCEs and ACEs on perceived stress (protective model) - sensitivity")
h1m2Sens_check <- measures_h1m2Sens %>%
  lm(stress ~ posExp*adverseExp + age + gender,.)

summary(h1m2Sens_check)

#does not appear to change data significantly 

```


```{r analysis : hypothesis 1 - sensitivty assumptions}
#checking models
plot(h1m1Sens_check)

plot(h1m2Sens_check)
```



##hypothesis 2
```{r analysis : hypothesis 2}
#Hypothesis 2
print("Hypothesis 2: PCEs and ACEs on sleep, accounting for stress (compensatory model)")
h2m1 <- measures %>%
  lm(sleep ~ posExp + adverseExp + stress + age + gender,.) 

#beta
h2m1_beta <- lm.beta(h2m1)

summary(h2m1_beta)

#hypothesis 1
print("Hypothesis 2: PCEs and ACEs on sleep, accounting for stress (protective model)")
h2m2 <- measures %>%
  lm(sleep ~ posExp*adverseExp + stress + age + gender,.) 

#beta
h2m2_beta <- lm.beta(h2m2)

summary(h2m2_beta)

#dummy variable matrix gender 
#male = 0
#female = 1
#nonbinary/other = 2
contrasts(measures$gender)

##ANOVA 
h2_modelFit <- anova(h2m1, h2m2)
h2_modelFit

```


```{r analysis : hypothesis 2 - visuals table merged}
#version of hypothesis 2 where the two regressions are merged together

#creating each regression table separately and turning into a gt() table
h2m1_merge <- h2m1_beta %>%
  tidy() %>%
  gt()
h2m1_merge

h2m2_merge <- h2m2_beta %>%
  tidy() %>%
  gt()
h2m2_merge

#pulling data from each gt table
h2m1_dat <- h2m1_merge$`_data`
h2m2_dat <- h2m2_merge$`_data`

#creating a new df with data from both gt tables
h2_full <- full_join(h2m1_dat, h2m2_dat, by = join_by(term))


#renaming columns to split after combining
h2_full <- h2_full %>%
  rename(
    "b_x" = "estimate.x",  
    "std.B_x" = "std_estimate.x",
    "SE_x" = "std.error.x",
    "t_x" = "statistic.x",
    "p_x" = "p.value.x",
    "b_y"= "estimate.y",
    "std.B_y" = "std_estimate.y",
    "SE_y" = "std.error.y",
    "t_y" = "statistic.y",
    "p_y" = "p.value.y",
  ) 



h2_full %>%
  gt() %>% 
  text_case_match(
    "posExp" ~ "PCEs",
    "adverseExp" ~ "ACEs",
    "posExp:adverseExp" ~ "PCEs*ACEs",
    "gender1" ~ "women", 
    "gender2" ~ "non-binary", 
    "stress" ~ "PSS") %>%
  cols_label(
    b_x = md("***b***"),
    std.B_x = md("**β**"),
    SE_x = md("***SE***"),
    t_x = md("***t***"),
    p_x = md("***p***"),
    b_y = md("***b***"),
    std.B_y = md("**β**"),
    SE_y = md("***SE***"),
    t_y = md("***t***"),
    p_y = md("***p***"),
  ) %>%
  cols_align(align = "left", columns = term) %>%
  cols_align(align = "center", columns = is.numeric) %>%
  tab_header(title = md("**Table 4.** ACEs, PCEs, and PSS predicting B-PSQI")) %>%
  tab_style(
    style = list(
      cell_text(weight = "bold")
      ),
    location = list(cells_column_labels(), cells_column_spanners())
  )%>%
  tab_style(
    style = list(
      cell_text(weight = "bold")
    ),
    locations = cells_body(
      columns = p_x,
      rows = p_x <.05
    )
  ) %>%
  tab_style(
    style = list(
      cell_text(weight = "bold")
    ),
    locations = cells_body(
      columns = p_y,
      rows = p_y <.05
    )
  ) %>%
  sub_values(
    columns = contains("p"),
    fn = function(x) x < .001, 
    replacement = "< .001"
  ) %>%
  fmt_number(columns = contains ("p"), decimals = 3) %>%
  fmt_number(columns = contains(c("b", "t", "SE", "B")), decimals = 2) %>%
  tab_options(table.font.names = "Times New Roman") %>%
  sub_missing(rows = everything(), missing_text = "-") %>%
  tab_spanner(label = "Unique Effects Model", columns = contains("x")) %>%
  tab_spanner(label = "Interaction Model", columns = contains("y")) #%>% gtsave(filename = "tb4.png")
```



```{r analysis : hypothesis 2 - gender t-tests}
#mean sleep, stress 
measures %>%
  group_by(gender) %>% summarise(mean_sleep = mean(sleep), 
                                 sd_sleep = sd(sleep),
                                 mean_stress = mean(stress),
                                 sd_stress = sd(stress))


##running a t-test

#taking out non-binary for testing + making new df just for t-tests
t_gender <- measures[-grep("2", measures$gender),]
t_gender$gender <- as.numeric(t_gender$gender)



#checking assumptions: 
sleep_f <- var.test(sleep ~ gender, data = t_gender)
sleep_f
#no significant difference in variance between men and women

#t-test
sleep_t <- t.test(sleep ~ gender, data = t_gender, var.equal = TRUE)
sleep_t
#ran an independent samples t-test, women showed significantly worse sleep quality than men

#checking gender and stress
#checking assumptions: 
pss_f <- var.test(stress ~ gender, data = t_gender)
pss_f
#equal variance 

#t-test
pss_t <- t.test(stress ~ gender, data = t_gender, var.equal = TRUE)
pss_t
#gender differences not significant with stress 
```

```{r analysis : hypothesis 2 - assumptions check}
#compensatory model 
plot(h2m1)

#interaction model
plot(h2m2)
```

```{r analysis : hypothesis 1 - collinearity}
h2m1_vif <- car::vif(h2m1)
print(h2m1_vif)

h2m2_vif <- car::vif(h2m2, type = "predictor")
print(h2m2_vif)

```


## hypothesis 2 - sensitivity checks
```{r analysis : hypothesis 2 - sensitivity checks}
#hypothesis 2 sensitivity check 

#creating new df with sensitivty taken out - specified by cooks 
measures_h2m1Sens <- measures
measures_h2m1Sens <- measures_h2m1Sens[-c(249, 262, 332),]

#taking out participants - specified by cooks distance
measures_h2m2Sens <- measures
measures_h2m2Sens <- measures_h2m2Sens[-c(249, 332, 385),]


#Hypothesis 2 : compensatory model 
print("Hypothesis 2: PCEs and ACEs on sleep, accounting for stress (compensatory model) - sensitivity")
h2m1Sens_check <- measures_h2m1Sens %>%
  lm(sleep ~ posExp + adverseExp + stress + age + gender,.) 

summary(h2m1Sens_check)

#hypothesis 2: protective model 
print("Hypothesis 2: PCEs and ACEs on sleep, accounting for stress (protective model) - sensitivity")
h2m2Sens_check <- measures_h2m2Sens %>%
  lm(sleep ~ posExp*adverseExp + stress + age + gender,.)

summary(h2m2Sens_check)


```


```{r analysis : hypothesis 2 - sensitivty assumptions}

#comparing model fit 

plot(h2m1Sens_check)

plot(h2m2Sens_check)

```

# Visuals of results
```{r results visuals}
### Visuals 

##Hypothesis 1

#stress and ACEs  
ggplot(measures, aes(x = stress, y = adverseExp))+
  geom_point()+
  geom_smooth(method = lm)

#stress and PCEs
ggplot(measures, aes(x = stress, y = posExp))+
  geom_point()+
  geom_smooth(method = lm)


##hypothesis 2

#sleep and PCEs
ggplot(measures, aes(x = posExp, y = sleep))+
  geom_point()+
  geom_smooth(method = lm)

#sleep and ACEs
ggplot(measures, aes(x = adverseExp, y = sleep))+
  geom_point()+
  geom_smooth(method = lm)

```




